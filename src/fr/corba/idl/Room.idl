module fr {
module corba {
module idl {
module Code {

	exception IdAlreadyUsed {};
	exception NameAlreadyUsed {};
	exception UnknownID {};
	exception WrongPassword {};
	
	struct Avatar {
		long id;
		string pseudo;
		string code_acces;
		string taille;
		string humeur;
		string sexe;
		string piece_courante;
		boolean est_admin;
		boolean est_connecte;
	};
	
	typedef sequence<Avatar> Avatars;
	
	interface User{
		void receiveChatMessage(in string nick, in string text);
		void receiveKicked();
		
		void receiveRoom(in Object room);
		void receiveMoved(in string nick, in short x, in short y);
	};
	
	interface Admin : User{
		void receiveExistingAvatars(in Object list);
		void receiveIsKicked(in boolean kicked);
		void receiveRoomContent(in Object room);
		void receiveConnectedUsers(in Object list);
	};
	interface Server
	{
		string subscribe(in string nick, in string password, in User c) raises (NameAlreadyUsed, WrongPassword);
		void unsubscribe(in string myId) raises (UnknownID);
		void comment(in string myId, in string text) raises (UnknownID);
		string addUser(in string nick, in string taille, in string humeur) raises (NameAlreadyUsed);
		boolean isAdmin(in string nick, in string password);
		Avatars requestExistingAvatars();		
		void requestKick(in string nick) raises(UnknownID);
		
		void requestMove(in short x, in short y);
		void changeRoom(in string myId);		
		void requestRoomContent(in string roomName);
	};

};
};
};
};
